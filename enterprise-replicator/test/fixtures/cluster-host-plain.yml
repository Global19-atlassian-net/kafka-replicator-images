---
version: '2'
services:
  zookeeper-src-a:
    hostname: zookeeper-src-a
    image: "${DOCKER_REGISTRY}confluentinc/cp-zookeeper:${DOCKER_TAG}"
    ports:
      - '22181:22181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 22181
    labels:
    - io.confluent.docker.testing=true

  zookeeper-src-b:
    hostname: zookeeper-src-b
    image: "${DOCKER_REGISTRY}confluentinc/cp-zookeeper:${DOCKER_TAG}"
    ports:
      - '32181:32181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181
    labels:
    - io.confluent.docker.testing=true

  zookeeper-dest:
    hostname: zookeeper-dest
    image: "${DOCKER_REGISTRY}confluentinc/cp-zookeeper:${DOCKER_TAG}"
    ports:
      - '42181:42181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 42181
    labels:
    - io.confluent.docker.testing=true

  kafka-1-src-a:
    hostname: kafka-1-src-a
    image: "${DOCKER_REGISTRY}confluentinc/cp-kafka:${DOCKER_TAG}"
    ports:
      - '9092:9092'
    depends_on:
        - zookeeper-src-a
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-src-a:22181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1-src-a:9092
    labels:
    - io.confluent.docker.testing=true

  kafka-2-src-a:
    hostname: kafka-2-src-a
    image: "${DOCKER_REGISTRY}confluentinc/cp-kafka:${DOCKER_TAG}"
    ports:
      - '9095:9095'
    depends_on:
        - zookeeper-src-a
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-src-a:22181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2-src-a:9095
    labels:
    - io.confluent.docker.testing=true

  kafka-1-src-b:
    hostname: kafka-1-src-b
    image: "${DOCKER_REGISTRY}confluentinc/cp-kafka:${DOCKER_TAG}"
    ports:
      - '9082:9082'
    depends_on:
        - zookeeper-src-b
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-src-b:32181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1-src-b:9082
    labels:
    - io.confluent.docker.testing=true

  kafka-2-src-b:
    hostname: kafka-2-src-b
    image: "${DOCKER_REGISTRY}confluentinc/cp-kafka:${DOCKER_TAG}"
    ports:
      - '9085:9085'
    depends_on:
        - zookeeper-src-b
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-src-b:32181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2-src-b:9085
    labels:
    - io.confluent.docker.testing=true

  kafka-1-dest:
    hostname: kafka-1-dest
    image: "${DOCKER_REGISTRY}confluentinc/cp-kafka:${DOCKER_TAG}"
    ports:
      - '9072:9072'
    depends_on:
        - zookeeper-dest
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-dest:42181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1-dest:9072
    labels:
    - io.confluent.docker.testing=true

  kafka-2-dest:
    hostname: kafka-2-dest
    image: "${DOCKER_REGISTRY}confluentinc/cp-kafka:${DOCKER_TAG}"
    ports:
      - '9075:9075'
    depends_on:
        - zookeeper-dest
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-dest:42181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2-dest:9075
    labels:
    - io.confluent.docker.testing=true

  connect-host-1:
    image: "${DOCKER_REGISTRY}confluentinc/cp-enterprise-replicator:${DOCKER_TAG}"
    labels:
    - io.confluent.docker.testing=true
    # This is a workaround for the invalid topic exception. If you allow auto-topic creation, sometimes
    # the worker fails with Invalid topic exception, restarting fixes the issue.
    restart: on-failure:3
    ports:
      - '28082:28082'
    depends_on:
        - kafka-1-dest
        - kafka-2-dest
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka-1-dest:9072,kafka-2-dest:9075
      CONNECT_REST_PORT: 28082
      CONNECT_GROUP_ID: "default"
      CONNECT_CONFIG_STORAGE_TOPIC: "default.config"
      CONNECT_OFFSET_STORAGE_TOPIC: "default.offsets"
      CONNECT_STATUS_STORAGE_TOPIC: "default.status"
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: "connect-host-1"
      # CONNECT_LOG4J_ROOT_LOGLEVEL: DEBUG
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 2
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 2
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 2
    volumes:
    - /tmp/replicator-host-cluster-test/:/tmp/test

  connect-host-2:
    image: "${DOCKER_REGISTRY}confluentinc/cp-enterprise-replicator:${DOCKER_TAG}"
    labels:
    - io.confluent.docker.testing=true
    restart: on-failure:3
    ports:
      - '38082:38082'
    depends_on:
        - kafka-1-dest
        - kafka-2-dest
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka-1-dest:9072,kafka-2-dest:9075
      CONNECT_REST_PORT: 38082
      CONNECT_GROUP_ID: "default"
      CONNECT_CONFIG_STORAGE_TOPIC: "default.config"
      CONNECT_OFFSET_STORAGE_TOPIC: "default.offsets"
      CONNECT_STATUS_STORAGE_TOPIC: "default.status"
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: "connect-host-2"
      # CONNECT_LOG4J_ROOT_LOGLEVEL: DEBUG
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 2
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 2
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 2
    volumes:
    - /tmp/replicator-host-cluster-test/:/tmp/test
